
name: docker-metamart-server release app

on:
  workflow_dispatch:
    inputs:
      docker_release_tag:
        description: "Server Docker Image Tag"
        required: true
      push_latest_tag_to_release:
        description: "Do you want to update docker image latest tag as well ?"
        type: boolean

jobs:
  maven-build:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Install antlr cli
        run: |
          sudo make install_antlr_cli

      - name: Setup jq
        run: |
          sudo apt-get update
          sudo apt-get install jq

      - name: Build MetaMart Server Application
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mvn -DskipTests clean package

      - name: Upload MetaMart application to Artifact
        uses: actions/upload-artifact@v4
        with:
          name: metamart-binary
          path: /home/runner/work/MetaMart/MetaMart/metamart-dist/target/*.tar.gz

  release-project-event-workflow_dispatch:
    if: github.event_name == 'workflow_dispatch'
    name: Release app with workflow_dispatch event
    runs-on: ubuntu-latest
    needs: maven-build
    steps:

      - name: Fetch Release Data
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: attach_release
        run: |
          echo "UPLOAD_URL=$(curl -H "Accept: application/vnd.github+json" -H "Authorization: Bearer $GITHUB_TOKEN" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/meta-mart/MetaMart/releases/tags/${{ inputs.DOCKER_RELEASE_TAG }}-release | jq .upload_url | tr -d '"' )" >> $GITHUB_OUTPUT

      - name: Download application from Artifact
        uses: actions/download-artifact@v4
        with:
          name: metamart-binary

      - name: Upload app to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_path: ./metamart-${{ inputs.DOCKER_RELEASE_TAG }}.tar.gz
          upload_url: ${{ steps.attach_release.outputs.UPLOAD_URL }}
          asset_name: metamart-${{ inputs.DOCKER_RELEASE_TAG }}.tar.gz
          asset_content_type: application/tar.gz

  push_to_docker_hub:
    runs-on: ubuntu-latest
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}
    needs: [ release-project-event-workflow_dispatch ]
    steps:
      - name: Check out the Repo
        uses: actions/checkout@v4

      - name: Set build arguments
        id: build-args
        run: |
          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Prepare for Docker Build&Push
        id: prepare
        uses: ./.github/actions/prepare-for-docker-build-and-push
        with:
          image: metamart/server
          tag: ${{ inputs.docker_release_tag }}
          push_latest: ${{ inputs.push_latest_tag_to_release }}
          dockerhub_username: ${{ secrets.DOCKERHUB_METAMART_USERNAME }}
          dockerhub_token: ${{ secrets.DOCKERHUB_METAMART_TOKEN }}

      - name: Build and push if event is workflow_dispatch and input is checked
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_NO_SUMMARY: true
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.prepare.outputs.tags }}
          file: ./docker/docker-compose-quickstart/Dockerfile
          build-args: |
            BUILD_DATE=${{ steps.build-args.outputs.BUILD_DATE }}
            COMMIT_ID=${{ github.sha }}
